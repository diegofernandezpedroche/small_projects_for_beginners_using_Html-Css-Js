# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    sudo apt-get update
#    echo "Lanzando: apt install curl"
#    sudo apt install curl
    echo "Arrancando servicio apache y verificando que este arriba"
    sudo systemctl start apache2.service
    echo `ps -ef | grep -i httpd`
    echo "Se va a ejecutar el comando: ls $(htmlpath)"
    echo `ls $(htmlpath)`
  displayName: 'Apache installed and ready to receive the HTML code's
# Copy files v2
# Copy files from a source folder to a target folder using patterns matching file paths (not folder paths).
- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.SourcesDirectory) # string. Source Folder. 
    Contents: '**' # string. Required. Contents. Default: **.
    TargetFolder: $(htmlpath) # string. Required. Target Folder. 
  # Advanced
    #CleanTargetFolder: false # boolean. Clean Target Folder. Default: false.
    #OverWrite: false # boolean. Overwrite. Default: false.
    #flattenFolders: false # boolean. Flatten Folders. Default: false.
    #preserveTimestamp: false # boolean. Preserve Target Timestamp. Default: false.
    #retryCount: '0' # string. Retry count to copy the file. Default: 0.
    #delayBetweenRetries: '1000' # string. Delay between two retries. Default: 1000.
    #ignoreMakeDirErrors: false # boolean. Ignore errors during creation of target folder. Default: false.

#- script: |
#    echo "Se va a ejecutar el comando: ls $(Build.SourcesDirectory)"
#    ls $(Build.SourcesDirectory)
#    echo "cp -r $(Build.SourcesDirectory)/ $(htmlpath)/"
#    sudo cp -r $(Build.SourcesDirectory) $(htmlpath)/
#  displayName: 'Code copied to: $(htmlpath)'

- script: |
    echo "Se va a ejecutar el comando: ls"
    echo `ls $(htmlpath)`
    echo "Curl a $(testURL)"
    curl $(testURL)
  displayName: 'Checking html code running on Apache'

